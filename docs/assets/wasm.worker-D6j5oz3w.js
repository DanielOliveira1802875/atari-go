(function(){"use strict";let o=null;self.onmessage=async i=>{const{type:r,payload:n}=i.data;if(r==="init")try{self.Module={locateFile:s=>`/atari-go/wasm/${s}`,onRuntimeInitialized:()=>{o={getBestMove:self.Module.cwrap("getBestMove","string",["string"])},self.postMessage({type:"initialized"})},print:s=>{console.log("WASM stdout:",s)},printErr:s=>{console.error("WASM stderr:",s)}};const t=await(await fetch("/atari-go/wasm/atari_go.js")).text(),l=new Blob([t],{type:"application/javascript"}),a=URL.createObjectURL(l);await import(a),URL.revokeObjectURL(a)}catch(e){const t=e instanceof Error?e.message:String(e);self.postMessage({type:"error",payload:t})}else if(r==="getBestMove"){if(!o){self.postMessage({type:"error",payload:"WebAssembly module not initialized"});return}try{const e=o.getBestMove(n);self.postMessage({type:"moveDone",payload:e})}catch(e){const t=e instanceof Error?e.message:String(e);self.postMessage({type:"error",payload:t})}}}})();
