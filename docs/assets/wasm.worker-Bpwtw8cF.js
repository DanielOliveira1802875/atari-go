(function(){"use strict";let s=null;const l="/atari-go/wasm/";self.onmessage=async c=>{const{type:o,payload:r}=c.data;if(o==="init"){const e=r==null?void 0:r.fileName;if(!e){self.postMessage({type:"error",payload:"Initialization error: A 'fileName' must be provided, e.g., 'atari-go-9x9'."});return}try{self.Module={locateFile:i=>`${l}${i}`,onRuntimeInitialized:()=>{s={getBestMove:self.Module.cwrap("getBestMove","string",["string"]),checkCapture:self.Module.cwrap("checkCapture","string",["string"]),wasMoveSuicidal:self.Module.cwrap("wasMoveSuicidal","string",["string"])},self.postMessage({type:"initialized"})},print:i=>{},printErr:i=>{}};const t=`${l}${e}.js`,a=await fetch(t);if(!a.ok)throw new Error(`Failed to fetch script at ${t}: ${a.statusText}`);const p=await a.text(),f=new Blob([p],{type:"application/javascript"}),n=URL.createObjectURL(f);await import(n),URL.revokeObjectURL(n)}catch(t){const a=t instanceof Error?t.message:String(t);self.postMessage({type:"error",payload:a})}}else if(o==="getBestMove"){if(!s){self.postMessage({type:"error",payload:"WebAssembly module not initialized"});return}try{const e=s.getBestMove(r);self.postMessage({type:"moveDone",payload:e})}catch(e){const t=e instanceof Error?e.message:String(e);self.postMessage({type:"error",payload:t})}}else if(o==="checkCapture"){if(!s){self.postMessage({type:"error",payload:"WebAssembly module not initialized"});return}try{const e=s.checkCapture(r);self.postMessage({type:"checkCaptureDone",payload:e})}catch(e){const t=e instanceof Error?e.message:String(e);self.postMessage({type:"error",payload:t})}}else if(o==="wasMoveSuicidal"){if(!s){self.postMessage({type:"error",payload:"WebAssembly module not initialized"});return}try{const e=s.wasMoveSuicidal(r);self.postMessage({type:"wasMoveSuicidalDone",payload:e})}catch(e){const t=e instanceof Error?e.message:String(e);self.postMessage({type:"error",payload:t})}}}})();
